/* ------------------------------------------------------------------------
 * $Id$
 * Copyright 2009 Tim Vernum
 * ------------------------------------------------------------------------
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * ------------------------------------------------------------------------
 */

package us.terebi.lang.lpc.compiler.java.test;

import us.terebi.lang.lpc.runtime.ArgumentSemantics;
import us.terebi.lang.lpc.runtime.LpcValue;
import us.terebi.lang.lpc.runtime.jvm.LpcMember;
import us.terebi.lang.lpc.runtime.jvm.LpcObject;
import us.terebi.lang.lpc.runtime.jvm.LpcParameter;
import us.terebi.lang.lpc.runtime.jvm.LpcMemberType;

/** Automatically generated by us.terebi.lang.lpc.compiler.java.JavaCompiler at %%% %%% ## ##:##:## %%% #### for source/lpc/test/us/terebi/lang/lpc/compiler/java/method.c */
public class MethodTestObjectInline extends LpcObject
{
    @LpcMember(name="hoozit", modifiers = { us.terebi.lang.lpc.runtime.MemberDefinition.Modifier.PUBLIC })
    @LpcMemberType(kind = us.terebi.lang.lpc.runtime.LpcType.Kind.MIXED, depth = 1)
    protected LpcValue hoozit(@LpcParameter(kind = us.terebi.lang.lpc.runtime.LpcType.Kind.STRING, depth = 0, name = "s", semantics=ArgumentSemantics.BY_VALUE)
    LpcValue s, @LpcParameter(kind = us.terebi.lang.lpc.runtime.LpcType.Kind.OBJECT, depth = 0, name = "o", semantics=ArgumentSemantics.BY_VALUE)
    LpcValue o)
    {
        return efun("implode").execute(s, efun("call_other").execute(o, makeValue("getName")));
    }
}
