package us.terebi.lang.lpc.test;

import java.util.*;
import us.terebi.lang.lpc.runtime.*;
import us.terebi.lang.lpc.runtime.jvm.*;
import us.terebi.lang.lpc.runtime.jvm.support.*;

/** Automatically generated by us.terebi.lang.lpc.compiler.java.JavaCompiler at %%% %%% ## ##:##:## %%% #### for source/lpc/test/us/terebi/lang/lpc/compiler/java/clazz.c */
public class clazz extends LpcObject
{
/* Inheritance */
/* Members */

/* Method ii (Line:3) */
    public @us.terebi.lang.lpc.runtime.jvm.LpcMember(name="ii", modifiers={})
    @us.terebi.lang.lpc.runtime.jvm.LpcMemberType(kind=us.terebi.lang.lpc.runtime.LpcType.Kind.INT, depth=0)
    LpcValue ii_( )
    {
        final LpcValue _lpc_v1 = makeValue(7);
        return _lpc_v1;
    }

/* Class huh (Line:7) */
    @us.terebi.lang.lpc.runtime.jvm.LpcMember(name="huh", modifiers={us.terebi.lang.lpc.runtime.MemberDefinition.Modifier.PRIVATE})
    public class cls_huh extends us.terebi.lang.lpc.runtime.jvm.LpcClass
    {
        public cls_huh()
        {
            super(getObjectDefinition());
        }

/* Field i (Line:8) */
        public
        @us.terebi.lang.lpc.runtime.jvm.LpcMember(name="i", modifiers={})
        @us.terebi.lang.lpc.runtime.jvm.LpcMemberType(kind=us.terebi.lang.lpc.runtime.LpcType.Kind.INT, depth=0)
        final LpcField _f_i = new LpcField("i", withType(us.terebi.lang.lpc.runtime.LpcType.Kind.INT, 0));
        {
            final LpcValue _lpc_v2 = ii_();
            _f_i.set(_lpc_v2);
        }

/* Field s (Line:9) */
        public
        @us.terebi.lang.lpc.runtime.jvm.LpcMember(name="s", modifiers={})
        @us.terebi.lang.lpc.runtime.jvm.LpcMemberType(kind=us.terebi.lang.lpc.runtime.LpcType.Kind.STRING, depth=0)
        final LpcField _f_s = new LpcField("s", withType(us.terebi.lang.lpc.runtime.LpcType.Kind.STRING, 0));

/* Field f (Line:10) */
        public
        @us.terebi.lang.lpc.runtime.jvm.LpcMember(name="f", modifiers={})
        @us.terebi.lang.lpc.runtime.jvm.LpcMemberType(kind=us.terebi.lang.lpc.runtime.LpcType.Kind.FUNCTION, depth=0)
        final LpcField _f_f = new LpcField("f", withType(us.terebi.lang.lpc.runtime.LpcType.Kind.FUNCTION, 0));

    } /* class huh */

/* Method foo (Line:13) */
    public @us.terebi.lang.lpc.runtime.jvm.LpcMember(name="foo", modifiers={})
    @us.terebi.lang.lpc.runtime.jvm.LpcMemberType(kind=us.terebi.lang.lpc.runtime.LpcType.Kind.CLASS, depth=0, className="huh")
    LpcValue foo_( )
    {
        final LpcValue _lpc_v3 = classReference(cls_huh.class);
        final LpcValue _lpc_v4 = efun("new").execute(_lpc_v3 , makeArray());
        final LpcVariable _l_huh = new LpcVariable( "huh", withType(cls_huh.class, 0) , _lpc_v4);
        final LpcReference _lpc_v5 = ClassSupport.getField(_l_huh.get(), "i");
        final LpcValue _lpc_v6 = makeValue(7);
        _lpc_v5.set(_lpc_v6);
        final LpcReference _lpc_v7 = ClassSupport.getField(_l_huh.get(), "s");
        final LpcValue _lpc_v8 = makeValue("seven");
        _lpc_v7.set(_lpc_v8);
        final LpcReference _lpc_v9 = ClassSupport.getField(_l_huh.get(), "f");
        final LpcValue _lpc_v10 = new us.terebi.lang.lpc.runtime.jvm.LpcFunction(getObjectInstance(),0)
        {
            public LpcValue execute(List<? extends LpcValue> args)
            {
                final LpcValue _lpc_v11 = makeValue(7);
                return _lpc_v11;
            } /* _lpc_v10.execute() */
        }; /* _lpc_v10 */
        _lpc_v9.set(_lpc_v10);
        return _l_huh.get();
    }

/* Method test (Line:21) */
    public @us.terebi.lang.lpc.runtime.jvm.LpcMember(name="test", modifiers={})
    @us.terebi.lang.lpc.runtime.jvm.LpcMemberType(kind=us.terebi.lang.lpc.runtime.LpcType.Kind.VOID, depth=0)
    LpcValue test_(
            @us.terebi.lang.lpc.runtime.jvm.LpcParameter(kind=us.terebi.lang.lpc.runtime.LpcType.Kind.CLASS, depth=0, className="huh", name="h", semantics=us.terebi.lang.lpc.runtime.ArgumentSemantics.BY_VALUE)
            LpcValue _p_h_v)
    {
        final LpcVariable _p_h = new LpcVariable("h", withType(cls_huh.class, 0), _p_h_v);
        final LpcReference _lpc_v12 = ClassSupport.getField(_p_h.get(), "f");
        final LpcValue _lpc_v13 = CallableSupport.asCallable(_lpc_v12.get()).execute();
        final LpcReference _lpc_v14 = ClassSupport.getField(_p_h.get(), "i");
        final LpcValue _lpc_v15 = ComparisonSupport.notEqual(_lpc_v13, _lpc_v14.get());
        if (_lpc_v15.asBoolean())
        {
            final LpcReference _lpc_v16 = ClassSupport.getField(_p_h.get(), "s");
            final LpcValue _lpc_v17 = makeValue(" failed");
            final LpcValue _lpc_v18 = MathSupport.add(_lpc_v16.get(), _lpc_v17);
            final LpcValue _lpc_v19 = efun("write").execute(_lpc_v18);
        } // (if _lpc_v15)
        /* 'if'@23.5 */

        return makeValue();
    }
}

