package us.terebi.lang.lpc.test;

import java.util.*;
import us.terebi.lang.lpc.runtime.*;
import us.terebi.lang.lpc.runtime.jvm.*;
import us.terebi.lang.lpc.runtime.jvm.support.*;

/** Automatically generated by us.terebi.lang.lpc.compiler.java.JavaCompiler at %%% %%% ## ##:##:## %%% #### for source/lpc/test/us/terebi/lang/lpc/compiler/java/method.c */
public class method extends LpcObject
{
/* Inheritance */
/* Members */

/* Method hoozit (Line:2) */
    public @us.terebi.lang.lpc.runtime.jvm.LpcMember(name="hoozit", modifiers={us.terebi.lang.lpc.runtime.MemberDefinition.Modifier.PUBLIC}) 
    @us.terebi.lang.lpc.runtime.jvm.LpcMemberType(kind=us.terebi.lang.lpc.runtime.LpcType.Kind.MIXED, depth=1)
    LpcValue hoozit_( 
@us.terebi.lang.lpc.runtime.jvm.LpcParameter(kind=us.terebi.lang.lpc.runtime.LpcType.Kind.STRING, depth=0, name="s", semantics=us.terebi.lang.lpc.runtime.ArgumentSemantics.BY_VALUE) LpcValue _p_s_v ,
@us.terebi.lang.lpc.runtime.jvm.LpcParameter(kind=us.terebi.lang.lpc.runtime.LpcType.Kind.OBJECT, depth=0, name="o", semantics=us.terebi.lang.lpc.runtime.ArgumentSemantics.BY_VALUE) LpcValue _p_o_v )
    {
        final LpcVariable _p_s = new LpcVariable( "s", withType( us.terebi.lang.lpc.runtime.LpcType.Kind.STRING, 0) , _p_s_v);
        final LpcVariable _p_o = new LpcVariable( "o", withType( us.terebi.lang.lpc.runtime.LpcType.Kind.OBJECT, 0) , _p_o_v);
        final LpcValue _lpc_v1 = makeValue("getName");
        final LpcValue _lpc_v2 = efun("call_other").execute(_p_o.get() , _lpc_v1 , makeArray());
        final LpcValue _lpc_v3 = efun("implode").execute(_p_s.get() , _lpc_v2 , nil());
        return _lpc_v3;
    } 
}

